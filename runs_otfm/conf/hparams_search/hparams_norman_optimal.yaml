# @package _global_

defaults:
  # - override /hydra/sweeper/sampler: grid
  - override /hydra/sweeper/sampler: random
  - override /hydra/sweeper: optuna

optimized_metric: r_squared

hydra:
  sweeper:
    #_target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper

    direction: minimize

    n_jobs: 6144

    n_trials: 6144

    sampler:
      # _target_: optuna.samplers.GridSampler
      _target_: optuna.samplers.RandomSampler
      

    # define hyperparameter search space
    params:
      dataset.split: choice(0) #,1,2,3,4)
      model.condition_embedding_dim: choice(256)
      model.time_encoder_dims: choice([2048, 2048, 2048])
      model.time_encoder_dropout: choice(0.0)
      model.hidden_dims: choice([2048, 2048, 2048], [4096,4096,4096])
      model.decoder_dropout: choice(0.0, 0.2)
      model.decoder_dims: choice([2048,2048, 2048], [4096, 4096, 4096])
      model.layers_before_pool.target_gene.layer_type: choice(mlp)
      model.layers_before_pool.target_gene.dims: choice([256, 256])
      model.layers_before_pool.target_gene.dropout_rate: choice(0.5, 0.0)
      model.layers_after_pool.layer_type: choice(mlp)
      model.layers_after_pool.dims: choice([1024, 1024])
      model.layers_after_pool.dropout_rate: choice(0.0, 0.2)
      model.cond_output_dropout: choice(0.5, 0.9)
      model.multi_steps: choice(1, 20, 50)
      model.tau_a: choice(1.0)
      model.tau_b: choice(1.0)
      model.epsilon: choice(1.0)
      model.pooling: choice(attention_token, mean)
      model.learning_rate: choice(0.00005, 0.0001)
      model.flow_noise: choice(0.5, 0.9)
      training.num_iterations: choice(200_000) #100_000, 